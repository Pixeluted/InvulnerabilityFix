package me.pixeluted.invulnerabilityfix.events;

import me.pixeluted.invulnerabilityfix.InvulnerabilityFix;
import net.minecraft.network.chat.Component;
import net.minecraft.world.entity.player.Player;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.event.entity.living.LivingAttackEvent;
import net.minecraftforge.event.entity.living.LivingDamageEvent;
import net.minecraftforge.event.entity.player.PlayerEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;

import java.util.HashMap;
import java.util.Map;

@Mod.EventBusSubscriber(modid = InvulnerabilityFix.MODID)
public class ServerEvents {
    public static final Map<String, Player> invulnerablePlayers = new HashMap<>();

    @SubscribeEvent
    public static void playerLoggedIn(PlayerEvent.PlayerLoggedInEvent event) {
        Player player = event.getEntity();
        
        invulnerablePlayers.put(player.getName().getString(), player);
    }

    @SubscribeEvent
    public static void onLivingAttack(LivingAttackEvent event) {
        if (event.getEntity() instanceof Player) {
            Player player = (Player) event.getEntity();

            if (invulnerablePlayers.containsKey(player.getName().getString())) {
                event.setCanceled(true);
            }
        }
    }
}
